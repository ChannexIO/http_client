searchNodes=[{"doc":"HTTPClientFacade for HTTP client.HTTPClient is meant to be use'd in custom modules in order to wrap the functionalities provided by supported HTTP clients.UsageFor example, to build API clients around HTTPClient:defmodule GitHub do use HTTPClient @endpoint &quot;https://api.github.com&quot; def read_repo(url, headers, option) do get(@endpoint &lt;&gt; url, headers, option) end endThis way, all requests done through the GitHub module will be done to the GitHub API:GitHub.read_repo(&quot;/repos/ChannexIO/http_client&quot;, headers, options) #=&gt; will issue a GET request at https://api.github.com/repos/ChannexIO/http_clientBy default requests done through HTTPoison client, to use Finch, for example, add use options:use HTTPClient, adapter: :finchTelemetryHTTPClient uses Telemetry to provide the following events:[:http_client, :request, :start] - Executed before sending a request.Measurements::system_time - The system timeMetadata::method - The method used in the request.:url - The url address.:options - The request options.[:http_client, :request, :stop] - Executed after a request is finished.Measurements::duration - Duration to make the request.Metadata::method - The method used in the request.:url - The url address.:options - The request options.:status_code - This value is optional. The response status code.:error - This value is optional. It includes any errors that occured while making the request.See the HTTPClient.Telemetry module for details on specific events.","ref":"HTTPClient.html","title":"HTTPClient","type":"module"},{"doc":"An HTTP client behaviour definition.Adapters that implement the HTTP client behaviour must support the following list of functions:request/5 - Issues an HTTP request with the given method to the given urlget/3 - issues GET request to the given urlpost/4 - issues POST request to the given urlput/4 - issues PUT request to the given urlpatch/4 - issues PATCH request to the given urldelete/3 - issues DELETE request to the given urlAll functions must return response defined in response/0.","ref":"HTTPClient.Adapter.html","title":"HTTPClient.Adapter","type":"behaviour"},{"doc":"","ref":"HTTPClient.Adapter.html#c:delete/3","title":"HTTPClient.Adapter.delete/3","type":"callback"},{"doc":"","ref":"HTTPClient.Adapter.html#c:get/3","title":"HTTPClient.Adapter.get/3","type":"callback"},{"doc":"","ref":"HTTPClient.Adapter.html#c:patch/4","title":"HTTPClient.Adapter.patch/4","type":"callback"},{"doc":"","ref":"HTTPClient.Adapter.html#c:post/4","title":"HTTPClient.Adapter.post/4","type":"callback"},{"doc":"","ref":"HTTPClient.Adapter.html#c:put/4","title":"HTTPClient.Adapter.put/4","type":"callback"},{"doc":"","ref":"HTTPClient.Adapter.html#c:request/5","title":"HTTPClient.Adapter.request/5","type":"callback"},{"doc":"Sets HTTP client implementation adapter based on the use options.Using options:adapter - Implementation of adapter to use. The default value is :httpoison.","ref":"HTTPClient.Adapter.html#set/1","title":"HTTPClient.Adapter.set/1","type":"function"},{"doc":"","ref":"HTTPClient.Adapter.html#t:body/0","title":"HTTPClient.Adapter.body/0","type":"type"},{"doc":"","ref":"HTTPClient.Adapter.html#t:headers/0","title":"HTTPClient.Adapter.headers/0","type":"type"},{"doc":"","ref":"HTTPClient.Adapter.html#t:method/0","title":"HTTPClient.Adapter.method/0","type":"type"},{"doc":"","ref":"HTTPClient.Adapter.html#t:options/0","title":"HTTPClient.Adapter.options/0","type":"type"},{"doc":"","ref":"HTTPClient.Adapter.html#t:response/0","title":"HTTPClient.Adapter.response/0","type":"type"},{"doc":"","ref":"HTTPClient.Adapter.html#t:url/0","title":"HTTPClient.Adapter.url/0","type":"type"},{"doc":"Implementation of HTTPClient.Adapter behaviour using Finch HTTP client.","ref":"HTTPClient.Adapters.Finch.html","title":"HTTPClient.Adapters.Finch","type":"module"},{"doc":"","ref":"HTTPClient.Adapters.Finch.html#build_request_url/2","title":"HTTPClient.Adapters.Finch.build_request_url/2","type":"function"},{"doc":"","ref":"HTTPClient.Adapters.Finch.html#t:body/0","title":"HTTPClient.Adapters.Finch.body/0","type":"type"},{"doc":"","ref":"HTTPClient.Adapters.Finch.html#t:headers/0","title":"HTTPClient.Adapters.Finch.headers/0","type":"type"},{"doc":"","ref":"HTTPClient.Adapters.Finch.html#t:method/0","title":"HTTPClient.Adapters.Finch.method/0","type":"type"},{"doc":"","ref":"HTTPClient.Adapters.Finch.html#t:options/0","title":"HTTPClient.Adapters.Finch.options/0","type":"type"},{"doc":"","ref":"HTTPClient.Adapters.Finch.html#t:url/0","title":"HTTPClient.Adapters.Finch.url/0","type":"type"},{"doc":"Implementation of HTTPClient.Adapter behaviour using HTTPoison HTTP client.","ref":"HTTPClient.Adapters.HTTPoison.html","title":"HTTPClient.Adapters.HTTPoison","type":"module"},{"doc":"","ref":"HTTPClient.Adapters.HTTPoison.html#t:body/0","title":"HTTPClient.Adapters.HTTPoison.body/0","type":"type"},{"doc":"","ref":"HTTPClient.Adapters.HTTPoison.html#t:headers/0","title":"HTTPClient.Adapters.HTTPoison.headers/0","type":"type"},{"doc":"","ref":"HTTPClient.Adapters.HTTPoison.html#t:method/0","title":"HTTPClient.Adapters.HTTPoison.method/0","type":"type"},{"doc":"","ref":"HTTPClient.Adapters.HTTPoison.html#t:options/0","title":"HTTPClient.Adapters.HTTPoison.options/0","type":"type"},{"doc":"","ref":"HTTPClient.Adapters.HTTPoison.html#t:url/0","title":"HTTPClient.Adapters.HTTPoison.url/0","type":"type"},{"doc":"An error of a request.","ref":"HTTPClient.Error.html","title":"HTTPClient.Error","type":"module"},{"doc":"","ref":"HTTPClient.Error.html#t:t/0","title":"HTTPClient.Error.t/0","type":"type"},{"doc":"A response to a request.","ref":"HTTPClient.Response.html","title":"HTTPClient.Response","type":"module"},{"doc":"","ref":"HTTPClient.Response.html#t:t/0","title":"HTTPClient.Response.t/0","type":"type"},{"doc":"Telemetry integration.Unless specified, all time's are in :native units.HTTPClient executes the following events:[:http_client, :request, :start] - Executed before sending a request.Measurements::system_time - The system timeMetadata::method - The method used in the request.:url - The url address.:options - The request options.[:http_client, :request, :stop] - Executed after a request is finished.Measurements::duration - Duration to make the request.Metadata::method - The method used in the request.:url - The url address.:options - The request options.:status_code - This value is optional. The response status code.:error - This value is optional. It includes any errors that occured while making the request.","ref":"HTTPClient.Telemetry.html","title":"HTTPClient.Telemetry","type":"module"}]